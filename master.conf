#cloud-config
apt_sources:
 - source: "deb http://apt.puppetlabs.com trusty main"
   keyid: 1054b7a24bd6ec30
 - source: "deb http://repos.mesosphere.io/ubuntu trusty main"
   keyid: E56151BF
apt_upgrade: true
locale: en_US.UTF-8
packages:
 - facter
 - mesosphere
 - python-pip
 - nginx
write_files:
-   path: /etc/cron.d/confnginx
    permissions: '0644'
    content: "* * * * * root /root/confnginx.rb"
-   path: /etc/nginx/conf.d/mesos_master.conf
    permissions: '0644'
    content: |
        upstream mesos_master {
          server 127.0.0.1:5050;
        }
-   path: /etc/nginx/conf.d/marathon.conf
    permissions: '0644'
    content: |
        upstream marathon {
          server 127.0.0.1:8080;
        }
-   path: /etc/nginx/sites-available/default
    permissions: '0644'
    content: |
        server {
          listen 80 default_server;
          location /mesos/ {
            proxy_pass http://mesos_master;
          }
          location /marathon/ {
            proxy_pass http://marathon;
          }
        }
-   path: /root/confnginx.rb
    permissions: '0700'
    content: |
        #!/usr/bin/ruby
        exit 0 unless File.exists? '/etc/mesos/zk'

        do_restart = false

        old_master = File.exists?('/etc/mesos_master') ? IO.read('/etc/mesos_master').chomp : ''
        new_master = `mesos-resolve $(cat /etc/mesos/zk) 2>/dev/null`.chomp

        if new_master != old_master
          File.open('/etc/mesos_master.new', 'w') { |f| f.puts new_master }
          File.open('/tmp/mesos_master.conf', 'w') do |f|
            f.puts 'upstream mesos_master {'
            f.puts "    server #{new_master};"
            f.puts '}'
          end
          File.rename '/tmp/mesos_master.conf', '/etc/nginx/conf.d/mesos_master.conf'
          File.rename '/etc/mesos_master.new', '/etc/mesos_master'
          do_restart = true
        end

        new_marathon_servers = JSON.parse(`/usr/local/bin/aws ec2 describe-instances --region eu-central-1 --filters "Name=tag-key,Values=role" "Name=tag-value,Values=mesos-master" --query 'Reservations[].Instances[].[PrivateIpAddress][]'`).sort
        old_marathon_servers = File.exists?('/etc/marathon_servers') ? IO.read('/etc/marathon_servers').chomp : ''

        if new_marathon_servers.join("\n") != old_marathon_servers
          File.open('/etc/marathon_servers.new', 'w') { |f| f.puts new_marathon_servers.join("\n") }
          File.open('/tmp/marathon.conf', 'w') do |f|
            f.puts 'upstream marathon {'
            new_marathon_servers.each { |server| f.puts "    server #{server}:8080;"
            f.puts '}'
          end
          File.rename '/tmp/marathon.conf', '/etc/nginx/conf.d/marathon.conf'
          File.rename '/etc/marathon_servers.new', '/etc/marathon_servers'
          do_restart = true
        end

        if do_restart
          system '/etc/init.d/nginx reload'
        end
-   path: /root/setupmaster.rb
    permissions: '0700'
    content: |
        #!/usr/bin/ruby
        require 'json'

        cluster_size = 0
        File.open('/etc/zookeeper/conf/cluster_size', 'r') { |f| cluster_size = f.read.chomp.to_i }

        zk_servers = []
        while zk_servers.size < cluster_size
          zk_servers = JSON.parse(`/usr/local/bin/aws ec2 describe-instances --region eu-central-1 --filters "Name=tag-key,Values=role" "Name=tag-value,Values=mesos-master" --query 'Reservations[].Instances[].[PrivateIpAddress][]'`).sort
        end

        myip = `facter ipaddress_eth0`.chomp

        File.open('/etc/zookeeper/conf/zoo.cfg', 'a') do |f|
          count = 1
          zk_servers.each do |server|
            f.puts "server.#{count}=#{server}:2888:3888"
            if server.match(myip)
              File.open('/etc/zookeeper/conf/myid', 'w') { |z| z.puts count }
            end
            count = count +1
          end
        end

        zk_servers = zk_servers.map { |s| "#{s}:2181" }

        File.open('/etc/mesos/zk', 'w') do |f|
          f.puts "zk://#{zk_servers.join(',')}/mesos"
        end
        File.open('/etc/marathon/conf/zk', 'w') do |f|
          f.puts "zk://#{zk_servers.join(',')}/marathon"
        end

        File.open('/etc/mesos-master/quorum', 'w') do |f|
          f.puts (cluster_size / 2).to_int + 1
        end 
runcmd:
 - [ echo, manual, ">", /etc/init/mesos-slave.override ]
 - [ /usr/bin/pip, install, awscli ]
 - [ /usr/bin/pip, install, zk_shell ]
 - [ sh, -c, "echo __CLUSTER_SIZE__ > /etc/zookeeper/conf/cluster_size" ]
 - [ mkdir, -p, /etc/marathon/store ]
 - [ mkdir, -p, /etc/marathon/conf ]
 - [ sh, -c, "echo file:///etc/marathon/store > /etc/marathon/conf/artifact_store" ]
 - [ /root/setupmaster.rb ]
 - [ stop, mesos-slave ]
 - [ restart, zookeeper ]
 - [ start, mesos-master ]
 - [ start, marathon ]
 - [ /etc/init.d/nginx, restart ]

